version: '3.9'

services:
  web:
    image: eshop_django
    build:
      context: ./eshop
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./eshop:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - mynetwork

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    networks:
      - mynetwork

  redis:
    image: redis:6
    networks:
      - mynetwork

  celery:
    build:
      context: ./eshop
      dockerfile: Dockerfile
    command: celery -A CeleryTest worker --loglevel=info -Q celery,celery:1,celery:2,celery:3
    volumes:
      - ./eshop:/app
    depends_on:
      - db
      - redis
    networks:
      - mynetwork

  flower:
    build:
      context: ./eshop
      dockerfile: Dockerfile
    command: celery -A CeleryTest flower --port=5555
    ports:
      - "5555:5555"
    volumes:
      - ./eshop:/app
    depends_on:
      - db
      - redis
    networks:
      - mynetwork

#  stand_alone_celery:
#    container_name: stand_alone_celery
#    build:
#      context: ./celery_worker
#      dockerfile: Dockerfile
#    command: celery -A celery_base worker --loglevel=info -Q queue2
#    volumes:
#      - ./celery_worker:/app
#    environment:
#      - BROKER_URL=redis://redis:6379/0
#      - RESULT_BACKEND=redis://redis:6379/0
#    depends_on:
#      - db
#      - redis
#      - web
#    networks:
#      - mynetwork

networks:
  mynetwork:

volumes:
  postgres_data:
